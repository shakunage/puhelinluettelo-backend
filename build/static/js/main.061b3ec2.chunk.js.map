{"version":3,"sources":["services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","features","getAll","axios","get","then","response","data","create","newObject","post","remove","id","delete","update","put","Notification","message","className","Error","DeleteButton","props","type","onClick","event","feature","name","Person","number","persons","Filter","value","inputValue","onChange","function","PersonForm","onSubmit","submitFunction","nameInput","nameFieldChange","numberInput","numberFieldChange","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","nameSearch","setNameSearch","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","useEffect","personService","initialPersons","console","log","length","handleLeftClick","window","confirm","find","x","setTimeout","filter","showAll","setShowAll","personsToShow","person","toLowerCase","indexOf","target","preventDefault","personObject","isNaN","map","returnedPerson","concat","catch","alert","i","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.061b3ec2.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst features = {\n  getAll,\n  create, \n  remove, \n  update\n}\nexport default features\n","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons.js'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"notification\">\n      {message}\n    </div>\n  )\n}\n\nconst Error = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst DeleteButton = (props) => {\n\n  return (\n    <button type=\"delete\" onClick={event => props.feature(event, props.name)}>delete</button>\n  )\n}\n\nconst Person = (props) => {\n  \n  return (\n    <p>\n      {props.name} {props.number} <DeleteButton feature={props.feature} persons={props.persons} name={props.name}/>\n    </p>    \n  )\n}\n\nconst Filter = (props) => {\n  \n  return (\n    <p>\n      filter: <input\n          value={props.inputValue}\n          onChange={props.function}\n        />\n    </p>\n  )\n}\n\nconst PersonForm = (props) => {\n  \n  return (\n    <form onSubmit={props.submitFunction}>\n        <div>\n          name: <input\n            value={props.nameInput}\n            onChange={props.nameFieldChange}\n          />\n          <br></br>\n          number: <input \n          value={props.numberInput}\n          onChange={props.numberFieldChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n  )\n}\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [nameSearch, setNameSearch] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n   personService\n    .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)}\n      )\n  }, [])\n  console.log('render', persons.length, 'persons')\n\n  const addName = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber,\n      id: persons.length + 1,\n    }\n\n    console.log(isNaN(newNumber))\n    console.log(newNumber === '')\n\n    const names = persons.map((person) => person.name)\n    \n    if (names.indexOf(newName) === -1) {\n      personService\n      .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))},\n      setNotificationMessage(\n        `Added '${newName}'`\n      ),\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)  \n        )\n    } else if (window.confirm(newName + \" is already added to the phonebook, replace old number with new?\")) {\n        personService\n          .update(persons.find(x => x.name === newName).id, personObject)\n          .then(response => {setNotificationMessage(\n            `Updated '${newName}'`\n          )},\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000))\n          .catch(\n            (setErrorMessage(\n              `Information for  '${newName}' has already been removed from server`),\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000))\n          )\n        \n    } else window.alert(newName + \" is already added to phonebook\")\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setNameSearch(event.target.value)\n    setShowAll(false)\n  }\n\n  const handleLeftClick = (event, name) => {\n    if (window.confirm(\"Delete \" + name + \" from phonebook?\")) {\n      personService\n        .remove(persons.find(x => x.name === name).id)\n        .then(setNotificationMessage(\n          `Removed '${name}'`\n        ),\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000))\n    } else console.log('ei')\n    setPersons(persons.filter(x => x.name !== name))\n  }\n\n  const [showAll, setShowAll] = useState(true)\n\n  const personsToShow = showAll\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().indexOf(nameSearch) > -1)\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <Notification message={notificationMessage} />\n        <Error message={errorMessage} />\n        <Filter inputValue={nameSearch} function={handleFilterChange} />\n      <h2>add a new</h2>\n        <PersonForm submitFunction={addName} nameInput={newName} nameFieldChange={handleNameChange} numberInput={newNumber} numberFieldChange={handleNumberChange} />\n      <h2>Numbers</h2>\n        <ul>\n        {personsToShow.map((person, i) => \n          (<Person key={i} persons={persons} feature={handleLeftClick} name={person.name} number={person.number}/>)\n        )}\n        </ul>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}